spring:
  zipkin:
    enabled: true
    base-url: ${ZIPKIN_URL:http://localhost:9411}
    sleuth:
      sampler:
        probability: 1.0
  data:
    mongodb:
      uri: ${SPRING_DATA_MONGODB_URI:mongodb://localhost:27017}
      database: test
    couchbase:
      auto-index: true
  couchbase:
    bootstrap-hosts: localhost
    bucket:
      name: payment
      password: 123456
      user: Administrator
  kafka:
    admin:
      properties:
        bootstrap.servers: ${SPRING_KAFKA_ADMIN_PROPERTIES_BOOTSTRAP.SERVERS:localhost:19092}
    consumer:
      bootstrap-servers: ${SPRING_KAFKA_CONSUMER_BOOTSTRAP-SERVERS:localhost:19092}
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      group-id: user-register-group
    producer:
      group-id: payment-service
      bootstrap-servers: ${SPRING_KAFKA_PRODUCER_BOOTSTRAP-SERVERS:localhost:19092}
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
  main:
    allow-bean-definition-overriding: true
  application:
    name: payment-service

server:
  port: 9595

eureka:
  instance:
    prefer-ip-address: true
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: ${EUREKA_CLIENT_SERVICE-URL_DEFAULT-ZONE:http://localhost:8761/eureka/}

management:
  endpoints:
    web:
      base-path: "/"
      exposure:
        include: health


kafka:
  payment:
    topic: payment-request
